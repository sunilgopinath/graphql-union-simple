// Code generated by protoc-gen-go. DO NOT EDIT.
// source: analytics.proto

/*
Package googleanalytics is a generated protocol buffer package.

It is generated from these files:
	analytics.proto

It has these top-level messages:
	AssetRequest
	AssetReply
*/
package grpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The request message containing the user's name.
type AssetRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *AssetRequest) Reset()                    { *m = AssetRequest{} }
func (m *AssetRequest) String() string            { return proto.CompactTextString(m) }
func (*AssetRequest) ProtoMessage()               {}
func (*AssetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AssetRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// The response message containing the greetings
type AssetReply struct {
	Id      string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Today   int32  `protobuf:"varint,2,opt,name=today" json:"today,omitempty"`
	Overall int32  `protobuf:"varint,3,opt,name=overall" json:"overall,omitempty"`
}

func (m *AssetReply) Reset()                    { *m = AssetReply{} }
func (m *AssetReply) String() string            { return proto.CompactTextString(m) }
func (*AssetReply) ProtoMessage()               {}
func (*AssetReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *AssetReply) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AssetReply) GetToday() int32 {
	if m != nil {
		return m.Today
	}
	return 0
}

func (m *AssetReply) GetOverall() int32 {
	if m != nil {
		return m.Overall
	}
	return 0
}

func init() {
	proto.RegisterType((*AssetRequest)(nil), "googleanalytics.AssetRequest")
	proto.RegisterType((*AssetReply)(nil), "googleanalytics.AssetReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for GoogleAnalytics service

type GoogleAnalyticsClient interface {
	// Sends a greeting
	AssetStatistics(ctx context.Context, in *AssetRequest, opts ...grpc.CallOption) (*AssetReply, error)
}

type googleAnalyticsClient struct {
	cc *grpc.ClientConn
}

func NewGoogleAnalyticsClient(cc *grpc.ClientConn) GoogleAnalyticsClient {
	return &googleAnalyticsClient{cc}
}

func (c *googleAnalyticsClient) AssetStatistics(ctx context.Context, in *AssetRequest, opts ...grpc.CallOption) (*AssetReply, error) {
	out := new(AssetReply)
	err := grpc.Invoke(ctx, "/googleanalytics.GoogleAnalytics/AssetStatistics", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for GoogleAnalytics service

type GoogleAnalyticsServer interface {
	// Sends a greeting
	AssetStatistics(context.Context, *AssetRequest) (*AssetReply, error)
}

func RegisterGoogleAnalyticsServer(s *grpc.Server, srv GoogleAnalyticsServer) {
	s.RegisterService(&_GoogleAnalytics_serviceDesc, srv)
}

func _GoogleAnalytics_AssetStatistics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AssetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoogleAnalyticsServer).AssetStatistics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/googleanalytics.GoogleAnalytics/AssetStatistics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoogleAnalyticsServer).AssetStatistics(ctx, req.(*AssetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GoogleAnalytics_serviceDesc = grpc.ServiceDesc{
	ServiceName: "googleanalytics.GoogleAnalytics",
	HandlerType: (*GoogleAnalyticsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AssetStatistics",
			Handler:    _GoogleAnalytics_AssetStatistics_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "analytics.proto",
}

func init() { proto.RegisterFile("analytics.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 223 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0x4d, 0x4b, 0x03, 0x31,
	0x10, 0x86, 0xdd, 0xd5, 0x2a, 0x0e, 0x62, 0x20, 0x78, 0x08, 0x16, 0xa1, 0xe4, 0xd4, 0x53, 0x10,
	0xfd, 0x05, 0xed, 0x45, 0x0f, 0x82, 0x65, 0x3d, 0x78, 0x4e, 0x9b, 0x61, 0x0d, 0x4c, 0x3b, 0x31,
	0x89, 0x1f, 0xf9, 0xf7, 0xb2, 0xb1, 0x2b, 0x22, 0x78, 0x7b, 0x3f, 0x06, 0xe6, 0xe1, 0x05, 0x61,
	0x77, 0x96, 0x4a, 0xf6, 0x9b, 0x64, 0x42, 0xe4, 0xcc, 0x52, 0xf4, 0xcc, 0x3d, 0xe1, 0x4f, 0xac,
	0x35, 0x9c, 0x2d, 0x52, 0xc2, 0xdc, 0xe1, 0xeb, 0x1b, 0xa6, 0x2c, 0x25, 0x1c, 0xed, 0xec, 0x16,
	0x55, 0x33, 0x6b, 0xe6, 0xa7, 0x5d, 0xd5, 0xfa, 0x01, 0x60, 0x7f, 0x13, 0xa8, 0xc8, 0x73, 0x68,
	0xbd, 0xdb, 0xf7, 0xad, 0x77, 0xf2, 0x02, 0x26, 0x99, 0x9d, 0x2d, 0xaa, 0x9d, 0x35, 0xf3, 0x49,
	0xf7, 0x6d, 0xa4, 0x82, 0x13, 0x7e, 0xc7, 0x68, 0x89, 0xd4, 0x61, 0xcd, 0x47, 0x7b, 0xb3, 0x06,
	0x71, 0x57, 0x21, 0x16, 0x23, 0x84, 0x7c, 0x04, 0x51, 0x1f, 0x3c, 0x65, 0x9b, 0x7d, 0xaa, 0xd1,
	0x95, 0xf9, 0x43, 0x6a, 0x7e, 0x63, 0x5e, 0x4e, 0xff, 0xab, 0x03, 0x15, 0x7d, 0xb0, 0xbc, 0x86,
	0xa9, 0x67, 0xd3, 0xc7, 0xb0, 0x31, 0xf8, 0x69, 0xb7, 0x81, 0x30, 0x99, 0x17, 0x24, 0xe2, 0x0f,
	0x8e, 0xe4, 0x96, 0xe2, 0x7e, 0xd0, 0xcf, 0x83, 0x5e, 0x0d, 0xb3, 0xac, 0x9a, 0xf5, 0x71, 0xdd,
	0xe7, 0xf6, 0x2b, 0x00, 0x00, 0xff, 0xff, 0xc4, 0xd2, 0xfc, 0xa5, 0x32, 0x01, 0x00, 0x00,
}
